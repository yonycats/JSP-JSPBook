<?xml version="1.0" encoding="UTF-8"?>

<web-app>

	<!-- 
		JSP 시큐리티 web.xml 설정
		1. 시큐리티 설정하는 방법
		
			<security-role>
				<role-name>role1</role-name>		// 역할 이름
			</security-role>
	
		2. 시큐리티 제약 사항 설정하기
		
		<security-constraint>
			<web-resource-collection></web-resource-collection>	// 웹 자원에 대한 접근 설정
			<auth-constraint></auth-constraint>					// 웹 자원에 접근할 수 있는 인증된 사용자 설정
			<user-data-constraint></user-data-constraint>		// 데이터 전송 시 데이터 보호를 설정
		</security-constraint>
		
			2-1 웹 자원에 대한 접근 설정
			
				<web-resource-collection>
					<web-resource-name>JSPBook</web-resource-name>  // 웹 자원이 이름을 설정하며 생략할 수 있다
			  		<url-pattern>/ch10/security02.jsp</url-pattern> // 접근 제한을 요청할 때 URL 목록을 설정
			  		<http-method>GET</http-method>					// HTTP 메소드를 설정 (GET, POST)
				</web-resource-collection>
			
			2-2 웹 자원에 접근할 수 있는 인증된 사용자 설정
			- auth-constraint를 설정하지 않으면 웹 서버는 사용자 인증을 요규하지 않고 사용자의 요청을 승인한다.
				<auth-constraint>
					<description>설명</description>	// 설명일 뿐
					<role-name>role1</role-name>	// 반드스 tomcat-users.xml에 등록된 역할과 사용자여야 한다.
				</auth-constraint>
			
			2-3 클라이언트와 서버 간에 데이터를 전송할 때 데이터를 보호하는 방법을 설정
				- NONE : 기본 값으로 데이터를 보호하지 않았을 떄
				- INTEGRAL : 전송 중 데이터가 변경되지 않았음을 보장 (데이터 무결성)
				- CONFIDENTIAL : 전송 중 데이터를 아무도 훔쳐보지 않았을을 보장 (데이터 기밀성)
				<user-data-constraint>
					<transport-guarantee>NONE</transport-guarantee>
				</user-data-constraint>
		
		3. 시큐리티 설정하기
			<login-config>
				<auth-method>FORM</auth-method>				// 웹 자원에 대한 인증 처리방식 설정
				<realm-name></realm-name>					// 웹 자원에 접근할 수 있는 인증된 사용자 설정
				<form-login-config> </form-login-config>	// 데이터 전송 시 데이터 보호를 설정
			</login-config>
		
			3-1 웹 어플리케이션의 인증 처리 기법을 설정하는 요소
				- BASIC : 웹 자원을 보호하는 간단하고 일반적인 방법
				- DIGEST : 암호화 매커니즘을 이용하여 전송, 많이 사용되지 않음
				- FORM : [대표적] 일반적인 폼 페리지를 이용하여 로그인 정보를 서버에 전송하는 방식
						암호화되지 않은 로그인 정보를 그대로 정송
						*** FORM 기반 인증시에는 별도 form 처리가 필요합니다.
				- CLIENT-CERT : 클라이언트가 인증서를 가지고 공인 키 인증 방식을 사용하여 로그인하는 방식
								클라이언트가 인증서를 가자ㅣ고 있어야만 로그인되므로 비지니스 환경에서만 적용
				<auth-method>FORM</auth-method>
			
			
			3-2 기본 인증의 영역 이름을 설정
				- FORM 기반 인증이나 다른 인증 방법에 필요하지 않기 때문에 아무런 영향을 미치지 않지만, 데이터를 문서화하는데 일반적으로 사용
				<realm-name>영역 이름</realm-name>
				
			3-3 인증 처리를 위한 로그인 및 오류 페이지를 설정
				- auth-method 요소가 FORM 기반 인증 처리 기법으로 설정되었을 때 사용
				<form-login-config>
					<form-login-page>/ch10/login.jsp</form-login-page>
					<form-error-page>/ch10/login_failed.jsp</form-error-page>
				</form-login-config>

	 -->


</web-app>